<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">


    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/reset-css@5.0.1/reset.min.css" />

    <link rel="stylesheet" href="../public/css/nav.css">
    <link rel="stylesheet" href="../public/css/map.css">

    <link rel="icon" href="/public/favicon.ico" />
    <title>지도</title>
  </head>
  <body style="overflow: hidden;">

    <%- include('nav.html') %>

    <div id="map"></div>
    <div class="myloc" onclick="getCurrentPosBtn()">내 위치</div>

    <script type="text/javascript" src="<%=KAKAO_MAP_KEY %>"></script>
    <script>

      let presentPosition;

      var mapContainer = document.getElementById('map'); // 지도를 표시할 div
      var mapOption = {
        center: new kakao.maps.LatLng(37.495307, 127.028587), // 지도의 중심좌표
        level:2, // 지도의 확대 레벨
        mapTypeId : kakao.maps.MapTypeId.ROADMAP // 지도종류
      };

      // 지도를 생성한다
      var map = new kakao.maps.Map(mapContainer, mapOption);

      // HTML5의 geolocation으로 사용할 수 있는지 확인합니다 
      if (navigator.geolocation) {
          
        // GeoLocation을 이용해서 접속 위치를 얻어옵니다
        navigator.geolocation.getCurrentPosition(function(position) {
            
          var lat = position.coords.latitude, // 위도
              lan = position.coords.longitude; // 경도
          
          var locPosition = new kakao.maps.LatLng(lat, lan) // geolocation으로 얻어온 좌표
          presentPosition=locPosition;
  
          map.setCenter(locPosition);   
                
          });
          
      } else { // HTML5의 GeoLocation을 사용할 수 없을때 
          
          var locPosition = new kakao.maps.LatLng(36.3381738, 127.4458014)  // 중심좌표=우송대
          alert('현재 위치를 찾을 수 없습니다!');
      }

      // ////////////////////////지점별 위치 마커////////////////////////
      // db.branch의 (이름, 위도, 경도)를 positions 배열에 넣음
      var positions = [
        {
          title: '<%=store[0].name%>', 
          latlng: new kakao.maps.LatLng('<%=store[0].lat%>', '<%=store[0].lng%>'),
          path: '<%=store[0].path%>'
        },
        {
          title: '<%=store[1].name%>', 
          latlng: new kakao.maps.LatLng('<%=store[1].lat%>', '<%=store[1].lng%>'),
          path: '<%=store[1].path%>'
        },
        {
          title: '<%=store[2].name%>', 
          latlng: new kakao.maps.LatLng('<%=store[2].lat%>', '<%=store[2].lng%>'),
          path: '<%=store[2].path%>'
        },
        {
          title: '<%=store[3].name%>', 
          latlng: new kakao.maps.LatLng('<%=store[3].lat%>', '<%=store[3].lng%>'),
          path: '<%=store[3].path%>'
        }
      ]; 
      
      for(let i=0; i < positions.length; i++){
        var data = positions[i];
        displayMarker(data);    //지점별 위치를 지도에 마커로 표시
      }

      var clickedOverlay = null
      // 지도에 마커를 표시하는 함수   
      function displayMarker(data) { 
        //마커 생성
        var marker = new kakao.maps.Marker({
          map: map,
          position: data.latlng
        });

        //마커 위에 커스텀오버레이 표시
        var overlay = new kakao.maps.CustomOverlay({
          yAnchor: 3,
          position: marker.getPosition()
        });

        //커스텀오버레이에 표시할 컨텐츠
        var content = '<div class="wrap">' + 
            '            <div class="info">' + 
            '              <div class="title">' + 
            `                ${data.title}` + 
            '                <div class="close" onclick="closeOverlay()" title="닫기"></div>' + 
            '            </div>' + 
            '            <div class="body">' + 
            '              <div class="img">' +
            '                <img src="/public/image/laundrycheck_logo.png" width="73" height="70">' +
            '              </div>' + 
            '              <div class="desc">' + 
            '                <div class="ellipsis">' +
            `                  ${data.title}` +
            '                </div>' + 
            `                <div class="linkcenter"><a href="${data.path}" target="_blank" class="link">현황확인 하러가기</a></div>` + 
            '              </div>' + 
            '          </div>' + 
            '      </div>' +    
            '  </div>';
          

        // 마커를 클릭했을 때 커스텀 오버레이를 표시하고 이전 오버레이 닫음
        kakao.maps.event.addListener(marker, 'click', function() {
          if (clickedOverlay) {   //이전 오버레이 닫음
            clickedOverlay.setMap(null)
          }
          
          overlay.setMap(map);    //오버레이를 지도 위에 표시
          map.panTo(data.latlng)

          clickedOverlay = overlay
        });
        
        var closeEl = document.querySelector('.close')

        overlay.setContent(content);
      }

      function closeOverlay() {
        if (clickedOverlay) {
          clickedOverlay.setMap(null)
        }
      }
      // ///////////////////////////////////////////////////////////////
   

      // ////////////////////////현재 내 위치 마커///////////////////////
      var imageSrc = '../public/image/mylocation.png',            // 마커이미지의 주소입니다    
          imageSize = new kakao.maps.Size(40, 40)                 // 마커이미지의 크기입니다
          //imageOption = {offset: new kakao.maps.Point(27, 69)}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.

      var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize)


      var flag = 0
      var myLocCenter = 0
      var myMarkers = []
      //접속 위치 가져오기 성공
      function locationLoadSuccess(pos){
        // 현재 위치 받아오기
        var currentPos = new kakao.maps.LatLng(pos.coords.latitude, pos.coords.longitude);
        
        // 지도 이동(기존 위치와 가깝다면 부드럽게 이동)
        if (myLocCenter == 0) {
          map.panTo(currentPos);
          myLocCenter = 1
        }
        

        // 마커 생성
        var myMarker = new kakao.maps.Marker({
          position: currentPos,
          image: markerImage
        });

        // 기존에 마커가 있다면 제거
        if (flag == 1) {
          myMarkers.setMap(null);
        } else {
          flag = 1
        }
        if (flag == 1) {
          myMarker.setMap(map);
        }

        myMarkers = myMarker
        
      };

      //접속 위치 가져오기 실패
      function locationLoadError(pos){
        alert('위치 정보를 가져오는데 실패했습니다.');
      };

      // 내 위치 버튼 클릭 시, geolocation으로 접속 위치 가져옴
      function getCurrentPosBtn(){
        navigator.geolocation.watchPosition(locationLoadSuccess,locationLoadError)          //계속 감시하는 GPS
        //navigator.geolocation.getCurrentPosition(locationLoadSuccess,locationLoadError);  //1회성 GPS
      };  
      // ///////////////////////////////////////////////////////////////

    </script>

    <!-- Optional JavaScript; choose one of the two! -->

    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>

    <!-- Option 2: Separate Popper and Bootstrap JS -->
    <!--
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js" integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js" integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13" crossorigin="anonymous"></script>
    -->
  </body>
</html>